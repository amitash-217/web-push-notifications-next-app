name: Build and Save Docker Image on ARM64

on:
  push:
    branches:
      - '*' # Or specify branches like 'main'

jobs:
  docker-arm64:
    runs-on: ubuntu-22.04-arm

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set image name
        run: echo "IMG_NAME=web-push-notification-next-app" >> $GITHUB_ENV
    
      - name: Populate env
        run: echo "${{ secrets.BASE64_ENV }}" | base64 -w 0 -d > .env

      - name: Build Docker image (no push)
        run: |
          docker build -t $IMG_NAME:latest .

      - name: Save Docker image to tar file
        run: |
          docker save -o $IMG_NAME.tar $IMG_NAME:latest

      - name: Generate unique tag
        id: tag
        run: |
          short_sha=$(echo "${GITHUB_SHA}" | cut -c1-7)
          timestamp=$(date +"%Y%m%d-%H%M%S")
          echo "tag=${timestamp}-${short_sha}" >> $GITHUB_OUTPUT
    
      - name: Create Release
        id: create_release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
    
      - name: Upload Docker image as release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.IMG_NAME }}.tar
          asset_name: ${{ env.IMG_NAME }}.tar
          asset_content_type: application/x-tar